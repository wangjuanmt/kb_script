#!/usr/bin/env bash

GOENV_ROOT=$HOME/.goenv
GOENV_EXEC=$GOENV_ROOT/bin/goenv

GO_VERSION=$1
SET_GLOBAL=$2
USE_DOWNLOAD_MIRROR=$3

GO_DOWNLOAD_ORIGIN="https://storage.googleapis.com/golang"
GO_DOWNLOAD_MIRROR="https://mirrors.ustc.edu.cn/golang"

if [[ $SYSTEM_ID = "osx" ]]; then
    export GO_BINARY_TARBALL_FILE_NAME="go${GO_VERSION}.darwin-amd64.tar.gz"
else
    export GO_BINARY_TARBALL_FILE_NAME="go${GO_VERSION}.linux-amd64.tar.gz"
fi

if [[ $USE_DOWNLOAD_MIRROR == "true" ]]; then
    GO_BINARY_TARBALL_DOWNLOAD_URL="${GO_DOWNLOAD_MIRROR}/${GO_BINARY_TARBALL_FILE_NAME}"
else
    GO_BINARY_TARBALL_DOWNLOAD_URL="${GO_DOWNLOAD_ORIGIN}/${GO_BINARY_TARBALL_FILE_NAME}"
fi

GO_BINARY_TARBALL_SAEV_PATH=$USER_DOWNLOADS/$GO_BINARY_TARBALL_FILE_NAME
GO_TARGET_DIR=$GOENV_ROOT/versions/$GO_VERSION

CURRENT_DIR=$(pwd)
mkdir -p $USER_DOWNLOADS
cd $USER_DOWNLOADS
#wget -nc $GO_BINARY_TARBALL_DOWNLOAD_URL -O $GO_BINARY_TARBALL_FILE_NAME
curl -L -o $GO_BINARY_TARBALL_FILE_NAME $GO_BINARY_TARBALL_DOWNLOAD_URL
mkdir -p $GO_TARGET_DIR
tar -xf $GO_BINARY_TARBALL_FILE_NAME -C $GO_TARGET_DIR --strip-components=1
#mv ./go $GO_TARGET_DIR
#rm -f $GO_BINARY_TARBALL_FILE_NAME
cd $CURRENT_DIR

eval "$($GOENV_EXEC init -)"

if [[ $SET_GLOBAL = "true" ]]; then
    $GOENV_EXEC global $GO_VERSION
fi

$GOENV_EXEC rehash
